// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct WormholeNftTransfer {
    #[prost(string, tag="1")]
    pub transaction_id: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub nft_address: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub nft_chain: ::prost::alloc::string::String,
    #[prost(string, tag="4")]
    pub recipient_address: ::prost::alloc::string::String,
    #[prost(string, tag="5")]
    pub target_chain: ::prost::alloc::string::String,
    #[prost(string, tag="6")]
    pub sender_address: ::prost::alloc::string::String,
    #[prost(uint64, tag="7")]
    pub block_time: u64,
    #[prost(uint64, tag="8")]
    pub block_height: u64,
    #[prost(uint32, tag="9")]
    pub sequence_number: u32,
    #[prost(string, tag="10")]
    pub nft_name: ::prost::alloc::string::String,
    #[prost(string, tag="11")]
    pub nft_symbol: ::prost::alloc::string::String,
    #[prost(string, tag="12")]
    pub nft_uri: ::prost::alloc::string::String,
    #[prost(uint64, tag="13")]
    pub token_id: u64,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct WormholeNftTransfers {
    #[prost(message, repeated, tag="1")]
    pub transfers: ::prost::alloc::vec::Vec<WormholeNftTransfer>,
}
// @@protoc_insertion_point(module)
